package com.gmm.drp.controller;

import com.gmm.drp.entity.User;
import com.gmm.drp.entity.UserLog;
import com.gmm.drp.service.UserService;
import com.gmm.drp.utils.ResultUtil;
import com.gmm.drp.vo.R;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.*;
import org.apache.shiro.subject.Subject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;

@RestController
//@Controller
public class UserController {
    @Autowired
    private UserService userService;
    private String md5Pwd;

    //登录
    @PostMapping("/userlogin.do")
    public R login(String rm, String username, String password, HttpServletRequest request) {
        User user = userService.login(username, password);
        if (user != null) {
            UserLog userLog = new UserLog();
            userLog.setPcip(request.getRemoteAddr());
            userLog.setUserid(user.getId());
            userService.saveLog(userLog);
            //通知Shiro登录成功
            Subject subject= SecurityUtils.getSubject();
            UsernamePasswordToken token=new UsernamePasswordToken(username,password);
            if(rm!=null && rm.length()>0) {
                token.setRememberMe(true);
            }
            subject.getSession().setAttribute("user",user);
            try {
                subject.login(token);
            } catch ( UnknownAccountException uae ) {
                System.out.println("用户名未知...");
            } catch ( IncorrectCredentialsException ice ) {
                System.out.println("凭据不正确，例如密码不正确 ...");
            } catch ( LockedAccountException lae ) {
                System.out.println("用户被锁定，例如管理员把某个用户禁用...");
            } catch ( ExcessiveAttemptsException eae ) {
                System.out.println("尝试认证次数多余系统指定次数");
            } catch ( AuthenticationException ae ) {
            //其他未指定异常
            }
            //未抛出异常，程序正常向下执行。
            return ResultUtil.setOK("登录成功");
        }else {
            return ResultUtil.setERROR("用户名或密码错误");
        }
    }

    //注册
   /* @PostMapping("userregister.do")
    //@RequestMapping(value = "userregister.do", method = RequestMethod.POST)
    public R save(User user){
        return userService.save(user);
    }*/
   @PostMapping("userregister.do")
    //@RequestMapping(value = "userregister.do", method = RequestMethod.POST)
    public R save(String username, String password){
        return userService.save(username,password);
    }
}
